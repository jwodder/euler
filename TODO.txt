Code to focus on improving:
 - primeIter and factor in eulerlib.py
 - euler0004.cpp
  - Look for a way to iterate over pairs of integers ordered by their product
    without getting sets/heaps involved
 - euler0021.py
  - Make `calculated` a list of bools (or a long bitmask?) instead of a set?
 - euler0023.py
 - euler0039.py
 - euler0046.py
 - euler0052.py
  - The code could stand to be more correct rather than only working because
    the answer isn't one of the possibilities it skips.
 - euler0076.c
 - euler0092.py (RUNTIME IS OVER TWO MINUTES)
 - euler0096.py
 - euler0145.c
 - euler0205.py?
 - euler0206.py

- Organize all of the solutions into subfolders based on problem types
- Add the MIT license to eulerlib.*? (and only eulerlib?)
- See what programs in primes/ I can speed up by adding a call to
  `precalPrimes`
- Consider adding a variant of `primeIter` that uses the `primeIter` algorithm
  up to a certain point (usually the square root of the upper bound) and then
  afterwards foregoes adding new primes to `primeCache`, Ã  la euler0035.py
